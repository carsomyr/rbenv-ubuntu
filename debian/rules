#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

RBENV_VERSION=$(shell head -n 1 -- debian/changelog \
	| sed -E -e "s/^rbenv-jruby[1-2]\\.[0-9] \\((.*)-.*\\) \\w+; urgency=low\$$/jruby-\\1/g")
MAJOR_VERSION=$(shell echo "$(RBENV_VERSION)" \
	| sed -E -e "s/^jruby-([1-2]\\.[0-9])\\..*\$$/jruby-\\1/g")
PACKAGE_NAME=$(shell head -n 1 -- debian/changelog \
	| sed -E -e "s/^(rbenv-jruby[1-2]\\.[0-9]) \\(.*\\) \\w+; urgency=low\$$/\\1/g")

ifeq ($(DEB_BUILD_ARCH), amd64)
	ARCH=x86_64
else ifeq ($(DEB_BUILD_ARCH), armhf)
	ARCH=arm
else ifeq ($(DEB_BUILD_ARCH), i386)
	ARCH=i386
endif

%:
	dh $@

override_dh_auto_build:
	for jar in build_lib/jffi-*-*.jar; do \
		if [ "$$jar" != "build_lib/jffi-$(ARCH)-Linux.jar" ]; then \
			rm -f -- "$$jar"; \
		fi \
	done

	dh_auto_build

	for executable in bin/*; do \
		if [ ! -x "$$executable" ]; then \
			rm -f -- "$$executable"; \
		fi \
	done

	rm -f -- bin/generate_parser bin/jruby.bash bin/jruby.sh
	rm -rf -- lib/native/Darwin

	cd -- bin \
		&& ./ruby -- gem install -l ../build_lib/rake-*.gem ../build_lib/jruby-launcher-*.gem \
		&& ./ruby -- gem uninstall -x rake jruby-launcher \
		; cd -- ..

	m4 -D MAJOR_VERSION=$(MAJOR_VERSION) -D RBENV_VERSION=$(RBENV_VERSION) -- debian/build/$(PACKAGE_NAME).links.m4 \
		> debian/$(PACKAGE_NAME).links
	m4 -D MAJOR_VERSION=$(MAJOR_VERSION) -- debian/build/$(PACKAGE_NAME).postrm.m4 \
		> debian/$(PACKAGE_NAME).postrm

override_dh_auto_install:
	mkdir -p -- debian/$(PACKAGE_NAME)/usr/lib/rbenv/versions/$(MAJOR_VERSION)

	rsync -r --delete -- bin/ debian/$(PACKAGE_NAME)/usr/lib/rbenv/versions/$(MAJOR_VERSION)/bin
	rsync -r --delete -- lib/ debian/$(PACKAGE_NAME)/usr/lib/rbenv/versions/$(MAJOR_VERSION)/lib

override_dh_auto_clean:
	rm -f -- debian/$(PACKAGE_NAME).links debian/$(PACKAGE_NAME).postrm

	dh_auto_clean

	rm -f -- bin/jruby
